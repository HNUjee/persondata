<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 自动扫描且只扫描 @Controller -->
	<context:component-scan base-package="online.shixun.project.module" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!-- 自动扫描且只扫描 @Controller -->
	<context:component-scan base-package="online.shixun.project.web" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!-- 相当于配置了注解式的新的映射器和适配器 -->
	<mvc:annotation-driven />
	<mvc:view-controller path="/" view-name="redirect:/login"/>
	<!-- 使用Spring提供的自动将requestbody里的json字符串的entity 转换为对应的对象实例 -->
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	  <property name="messageConverters">
		   <list>
		   	 <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		   </list>
	  </property>
	 </bean>
	   <!-- 启动Spring MVC的注解功能 -->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	<!-- 配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!--  springmvc提供的简单异常处理器 
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	     定义默认的异常处理页面
	    <property name="defaultErrorView" value="/error/error"/>
	    定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception 
	    <property name="exceptionAttribute" value="ex"/>
	    定义需要特殊处理的异常，这是重要点 
	    <property name="exceptionMappings">
	        <props>
	            <prop key="online.shixun.project.exception.CustomException">/WEB-INF/views/error/custom_error</prop>
	        </props>
	    </property>
	</bean> -->

	<!-- 文件上传：多媒体文件解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5151400"></property>
	</bean>
	<mvc:default-servlet-handler />
	<!-- 配置静态资源目录，访问 /file/** 的请求时，到 file 目录下寻找资源文件   -->
	<mvc:resources location="/assets/" mapping="/assets/**" />
	<!-- 访问拦截  
  	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/soa/login"/>
			<bean class="online.shixun.project.interceptor.Sinterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	-->  
</beans>